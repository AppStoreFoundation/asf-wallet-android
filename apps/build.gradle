apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  testImplementation "junit:junit:$junitVersion"
  testImplementation "org.mockito:mockito-core:$project.mockitoCoreVersion"
  implementation "io.reactivex.rxjava2:rxjava:$project.rxJavaVersion"
  implementation "com.squareup.retrofit2:retrofit:$project.retrofitVersion"
  implementation "com.squareup.retrofit2:converter-gson:$project.retrofitVersion"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofitVersion"
  implementation "com.squareup.okhttp3:okhttp:$project.okhttpVersion"
  implementation "com.google.code.gson:gson:$project.gsonVersion"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

version 1

//region Publishing
task sourcesJar(type: Jar) {
  from sourceSets.main.java.srcDirs
  classifier "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    MyPublication(MavenPublication) {
      groupId 'com.asfoundation'
      artifactId project.name
      version project.version
      artifact(sourcesJar)
      artifact(javadocJar)
      artifact("$buildDir/libs/${project.name}-${project.version}.jar")

      //The publication doesn't know about our dependencies, so we have to manually add them to the pom
      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        //Iterate over the api dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.api.allDependencies.each {
          def dependencyNode = dependenciesNode.appendNode('dependency')
          dependencyNode.appendNode('groupId', it.group)
          dependencyNode.appendNode('artifactId', it.name)
          dependencyNode.appendNode('version', it.version)
        }
      }
    }
  }
  repositories {
    maven {
      url "$buildDir/repo"
    }
  }
}

bintray {
  user = "${ASF_BINTRAY_USER}"
  key = "${ASF_BINTRAY_KEY}"
  publications = ['MyPublication']
  pkg {
    repo = 'asf'
    name = "${project.name}"
    licenses = ['GPL-3.0']
    vcsUrl = 'https://github.com/AppStoreFoundation/asf-wallet-android'

    version {
      name = project.version
    }
  }
}
//endregion

// execute android tests before realising a new apk
tasks.whenTaskAdded {
  task -> if (task.name.contains('publish')) task.dependsOn("assemble")
}